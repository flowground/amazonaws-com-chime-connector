{
    "openapi": "3.0.0",
    "servers": [
        {
            "url": "https://chime.amazonaws.com/"
        },
        {
            "url": "http://chime.amazonaws.com/"
        }
    ],
    "x-hasEquivalentPaths": true,
    "info": {
        "contact": {
            "email": "mike.ralphson@gmail.com",
            "name": "Mike Ralphson",
            "url": "https://github.com/mermade/aws2openapi",
            "x-twitter": "PermittedSoc"
        },
        "description": "<p>The Amazon Chime API (application programming interface) is designed for administrators to use to perform key tasks, such as creating and managing Amazon Chime accounts and users. This guide provides detailed information about the Amazon Chime API, including operations, types, inputs and outputs, and error codes.</p> <p>You can use an AWS SDK, the AWS Command Line Interface (AWS CLI), or the REST API to make API calls. We recommend using an AWS SDK or the AWS CLI. Each API operation includes links to information about using it with a language-specific AWS SDK or the AWS CLI.</p> <dl> <dt>Using an AWS SDK</dt> <dd> <p>You don't need to write code to calculate a signature for request authentication. The SDK clients authenticate your requests by using access keys that you provide. For more information about AWS SDKs, see the <a href=\"http://aws.amazon.com/developer/\">AWS Developer Center</a>.</p> </dd> <dt>Using the AWS CLI</dt> <dd> <p>Use your access keys with the AWS CLI to make API calls. For information about setting up the AWS CLI, see <a href=\"https://docs.aws.amazon.com/cli/latest/userguide/installing.html\">Installing the AWS Command Line Interface</a> in the <i>AWS Command Line Interface User Guide</i>. For a list of available Amazon Chime commands, see the <a href=\"https://docs.aws.amazon.com/cli/latest/reference/chime/index.html\">Amazon Chime commands</a> in the <i>AWS CLI Command Reference</i>.</p> </dd> <dt>Using REST API</dt> <dd> <p>If you use REST to make API calls, you must authenticate your request by providing a signature. Amazon Chime supports signature version 4. For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\">Signature Version 4 Signing Process</a> in the <i>Amazon Web Services General Reference</i>.</p> <p>When making REST API calls, use the service name <code>chime</code> and REST endpoint <code>https://service.chime.aws.amazon.com</code>.</p> </dd> </dl> <p>Administrative permissions are controlled using AWS Identity and Access Management (IAM). For more information, see <a href=\"https://docs.aws.amazon.com/chime/latest/ag/control-access.html\">Control Access to the Amazon Chime Console</a> in the <i>Amazon Chime Administration Guide</i>.</p>",
        "license": {
            "name": "Apache 2.0 License",
            "url": "http://www.apache.org/licenses/"
        },
        "termsOfService": "https://aws.amazon.com/service-terms/",
        "title": "Amazon Chime",
        "version": "2018-05-01",
        "x-apiClientRegistration": {
            "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
        },
        "x-apisguru-categories": [
            "cloud"
        ],
        "x-logo": {
            "backgroundColor": "#FFFFFF",
            "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.jpeg"
        },
        "x-origin": [
            {
                "contentType": "application/json",
                "converter": {
                    "url": "https://github.com/mermade/aws2openapi",
                    "version": "1.0.0"
                },
                "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/chime-2018-05-01.normal.json",
                "x-apisguru-direct": true
            }
        ],
        "x-preferred": true,
        "x-providerName": "amazonaws.com",
        "x-release": "v4",
        "x-serviceName": "chime"
    },
    "externalDocs": {
        "description": "Amazon Web Services documentation",
        "url": "https://aws.amazon.com/chime/"
    },
    "security": [
        {
            "hmac": []
        }
    ],
    "paths": {
        "/console/accounts#CreateAccount": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Creates an Amazon Chime account under the administrator's AWS account. Only <code>Team</code> account types are currently supported for this action. For more information about different account types, see <a href=\"https://docs.aws.amazon.com/chime/latest/ag/manage-chime-account.html\">Managing Your Amazon Chime Accounts</a> in the <i>Amazon Chime Administration Guide</i>.",
                "operationId": "CreateAccount",
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Account": {
                                            "description": "The Amazon Chime account details.",
                                            "properties": {
                                                "AccountId": {
                                                    "description": "The Amazon Chime account ID.",
                                                    "type": "string"
                                                },
                                                "AccountType": {
                                                    "description": "The Amazon Chime account type. For more information about different account types, see <a href=\"https://docs.aws.amazon.com/chime/latest/ag/manage-chime-account.html\">Managing Your Amazon Chime Accounts</a> in the <i>Amazon Chime Administration Guide</i>.",
                                                    "enum": [
                                                        "Team",
                                                        "EnterpriseDirectory",
                                                        "EnterpriseLWA",
                                                        "EnterpriseOIDC"
                                                    ],
                                                    "type": "string"
                                                },
                                                "AwsAccountId": {
                                                    "description": "The AWS account ID.",
                                                    "type": "string"
                                                },
                                                "CreatedTimestamp": {
                                                    "description": "The Amazon Chime account creation timestamp, in ISO 8601 format.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "DefaultLicense": {
                                                    "description": "The default license for the Amazon Chime account.",
                                                    "enum": [
                                                        "Basic",
                                                        "Plus",
                                                        "Pro",
                                                        "ProTrial"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The Amazon Chime account name.",
                                                    "type": "string"
                                                },
                                                "SupportedLicenses": {
                                                    "description": "Supported licenses for the Amazon Chime account.",
                                                    "items": {
                                                        "enum": [
                                                            "Basic",
                                                            "Plus",
                                                            "Pro",
                                                            "ProTrial"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "AwsAccountId",
                                                "AccountId",
                                                "Name"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "UnauthorizedClientException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ForbiddenException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ThrottledClientException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "486": {
                        "description": "ServiceFailureException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Name": {
                                        "description": "The name of the Amazon Chime account.",
                                        "maxLength": 100,
                                        "minLength": 1,
                                        "pattern": ".*\\S.*",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Name"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/console/accounts#ListAccounts": {
            "get": {
                "description": "Lists the Amazon Chime accounts under the administrator's AWS account. You can filter accounts by account name prefix. To find out which Amazon Chime account a user belongs to, you can filter by the user's email address, which returns one account result.",
                "operationId": "ListAccounts",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "MaxResults",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "NextToken",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Accounts": {
                                            "description": "List of Amazon Chime accounts and account details.",
                                            "items": {
                                                "description": "The Amazon Chime account details. An AWS account can have multiple Amazon Chime accounts.",
                                                "properties": {
                                                    "AccountId": {
                                                        "description": "The Amazon Chime account ID.",
                                                        "type": "string"
                                                    },
                                                    "AccountType": {
                                                        "description": "The Amazon Chime account type. For more information about different account types, see <a href=\"https://docs.aws.amazon.com/chime/latest/ag/manage-chime-account.html\">Managing Your Amazon Chime Accounts</a> in the <i>Amazon Chime Administration Guide</i>.",
                                                        "enum": [
                                                            "Team",
                                                            "EnterpriseDirectory",
                                                            "EnterpriseLWA",
                                                            "EnterpriseOIDC"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "AwsAccountId": {
                                                        "description": "The AWS account ID.",
                                                        "type": "string"
                                                    },
                                                    "CreatedTimestamp": {
                                                        "description": "The Amazon Chime account creation timestamp, in ISO 8601 format.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "DefaultLicense": {
                                                        "description": "The default license for the Amazon Chime account.",
                                                        "enum": [
                                                            "Basic",
                                                            "Plus",
                                                            "Pro",
                                                            "ProTrial"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "Name": {
                                                        "description": "The Amazon Chime account name.",
                                                        "type": "string"
                                                    },
                                                    "SupportedLicenses": {
                                                        "description": "Supported licenses for the Amazon Chime account.",
                                                        "items": {
                                                            "enum": [
                                                                "Basic",
                                                                "Plus",
                                                                "Pro",
                                                                "ProTrial"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "required": [
                                                    "AwsAccountId",
                                                    "AccountId",
                                                    "Name"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "NextToken": {
                                            "description": "The token to use to retrieve the next page of results.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "UnauthorizedClientException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ForbiddenException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ThrottledClientException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "486": {
                        "description": "ServiceFailureException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/console/accounts/{accountId}#DeleteAccount": {
            "delete": {
                "description": "<p>Deletes the specified Amazon Chime account. You must suspend all users before deleting a <code>Team</code> account. You can use the <a>BatchSuspendUser</a> action to do so.</p> <p>For <code>EnterpriseLWA</code> and <code>EnterpriseAD</code> accounts, you must release the claimed domains for your Amazon Chime account before deletion. As soon as you release the domain, all users under that account are suspended.</p> <p>Deleted accounts appear in your <code>Disabled</code> accounts list for 90 days. To restore a deleted account from your <code>Disabled</code> accounts list, you must contact AWS Support.</p> <p>After 90 days, deleted accounts are permanently removed from your <code>Disabled</code> accounts list.</p>",
                "operationId": "DeleteAccount",
                "parameters": [
                    {
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "UnauthorizedClientException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ForbiddenException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ThrottledClientException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "UnprocessableEntityException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "486": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "487": {
                        "description": "ServiceFailureException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/console/accounts/{accountId}#GetAccount": {
            "get": {
                "description": "Retrieves details for the specified Amazon Chime account, such as account type and supported licenses.",
                "operationId": "GetAccount",
                "parameters": [
                    {
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Account": {
                                            "description": "The Amazon Chime account details.",
                                            "properties": {
                                                "AccountId": {
                                                    "description": "The Amazon Chime account ID.",
                                                    "type": "string"
                                                },
                                                "AccountType": {
                                                    "description": "The Amazon Chime account type. For more information about different account types, see <a href=\"https://docs.aws.amazon.com/chime/latest/ag/manage-chime-account.html\">Managing Your Amazon Chime Accounts</a> in the <i>Amazon Chime Administration Guide</i>.",
                                                    "enum": [
                                                        "Team",
                                                        "EnterpriseDirectory",
                                                        "EnterpriseLWA",
                                                        "EnterpriseOIDC"
                                                    ],
                                                    "type": "string"
                                                },
                                                "AwsAccountId": {
                                                    "description": "The AWS account ID.",
                                                    "type": "string"
                                                },
                                                "CreatedTimestamp": {
                                                    "description": "The Amazon Chime account creation timestamp, in ISO 8601 format.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "DefaultLicense": {
                                                    "description": "The default license for the Amazon Chime account.",
                                                    "enum": [
                                                        "Basic",
                                                        "Plus",
                                                        "Pro",
                                                        "ProTrial"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The Amazon Chime account name.",
                                                    "type": "string"
                                                },
                                                "SupportedLicenses": {
                                                    "description": "Supported licenses for the Amazon Chime account.",
                                                    "items": {
                                                        "enum": [
                                                            "Basic",
                                                            "Plus",
                                                            "Pro",
                                                            "ProTrial"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "AwsAccountId",
                                                "AccountId",
                                                "Name"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "UnauthorizedClientException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ForbiddenException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ThrottledClientException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "486": {
                        "description": "ServiceFailureException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/console/accounts/{accountId}#UpdateAccount": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Updates account details for the specified Amazon Chime account. Currently, only account name updates are supported for this action.",
                "operationId": "UpdateAccount",
                "parameters": [
                    {
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Account": {
                                            "description": "The updated Amazon Chime account details.",
                                            "properties": {
                                                "AccountId": {
                                                    "description": "The Amazon Chime account ID.",
                                                    "type": "string"
                                                },
                                                "AccountType": {
                                                    "description": "The Amazon Chime account type. For more information about different account types, see <a href=\"https://docs.aws.amazon.com/chime/latest/ag/manage-chime-account.html\">Managing Your Amazon Chime Accounts</a> in the <i>Amazon Chime Administration Guide</i>.",
                                                    "enum": [
                                                        "Team",
                                                        "EnterpriseDirectory",
                                                        "EnterpriseLWA",
                                                        "EnterpriseOIDC"
                                                    ],
                                                    "type": "string"
                                                },
                                                "AwsAccountId": {
                                                    "description": "The AWS account ID.",
                                                    "type": "string"
                                                },
                                                "CreatedTimestamp": {
                                                    "description": "The Amazon Chime account creation timestamp, in ISO 8601 format.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "DefaultLicense": {
                                                    "description": "The default license for the Amazon Chime account.",
                                                    "enum": [
                                                        "Basic",
                                                        "Plus",
                                                        "Pro",
                                                        "ProTrial"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The Amazon Chime account name.",
                                                    "type": "string"
                                                },
                                                "SupportedLicenses": {
                                                    "description": "Supported licenses for the Amazon Chime account.",
                                                    "items": {
                                                        "enum": [
                                                            "Basic",
                                                            "Plus",
                                                            "Pro",
                                                            "ProTrial"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "AwsAccountId",
                                                "AccountId",
                                                "Name"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "UnauthorizedClientException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ForbiddenException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ThrottledClientException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "486": {
                        "description": "ServiceFailureException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Name": {
                                        "description": "The new name for the specified Amazon Chime account.",
                                        "maxLength": 100,
                                        "minLength": 1,
                                        "pattern": ".*\\S.*",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/console/accounts/{accountId}/settings#GetAccountSettings": {
            "get": {
                "description": "Retrieves account settings for the specified Amazon Chime account ID, such as remote control and dial out settings. For more information about these settings, see <a href=\"https://docs.aws.amazon.com/chime/latest/ag/policies.html\">Use the Policies Page</a> in the <i>Amazon Chime Administration Guide</i>.",
                "operationId": "GetAccountSettings",
                "parameters": [
                    {
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "AccountSettings": {
                                            "description": "The Amazon Chime account settings.",
                                            "properties": {
                                                "DisableRemoteControl": {
                                                    "description": "Setting that stops or starts remote control of shared screens during meetings.",
                                                    "type": "boolean"
                                                },
                                                "EnableDialOut": {
                                                    "description": "Setting that allows meeting participants to choose the <b>Call me at a phone number</b> option. For more information, see <a href=\"https://docs.aws.amazon.com/chime/latest/ug/chime-join-meeting.html\">Join a Meeting without the Amazon Chime App</a>.",
                                                    "type": "boolean"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "UnauthorizedClientException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ForbiddenException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ThrottledClientException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "486": {
                        "description": "ServiceFailureException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/console/accounts/{accountId}/settings#UpdateAccountSettings": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "put": {
                "description": "Updates the settings for the specified Amazon Chime account. You can update settings for remote control of shared screens, or for the dial-out option. For more information about these settings, see <a href=\"https://docs.aws.amazon.com/chime/latest/ag/policies.html\">Use the Policies Page</a> in the <i>Amazon Chime Administration Guide</i>.",
                "operationId": "UpdateAccountSettings",
                "parameters": [
                    {
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "UnauthorizedClientException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ForbiddenException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ConflictException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "ThrottledClientException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "486": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "487": {
                        "description": "ServiceFailureException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "AccountSettings": {
                                        "description": "The Amazon Chime account settings to update.",
                                        "properties": {
                                            "DisableRemoteControl": {
                                                "description": "Setting that stops or starts remote control of shared screens during meetings.",
                                                "type": "boolean"
                                            },
                                            "EnableDialOut": {
                                                "description": "Setting that allows meeting participants to choose the <b>Call me at a phone number</b> option. For more information, see <a href=\"https://docs.aws.amazon.com/chime/latest/ug/chime-join-meeting.html\">Join a Meeting without the Amazon Chime App</a>.",
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "required": [
                                    "AccountSettings"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/console/accounts/{accountId}/users": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Suspends up to 50 users from a <code>Team</code> or <code>EnterpriseLWA</code> Amazon Chime account. For more information about different account types, see <a href=\"https://docs.aws.amazon.com/chime/latest/ag/manage-chime-account.html\">Managing Your Amazon Chime Accounts</a> in the <i>Amazon Chime Administration Guide</i>.</p> <p>Users suspended from a <code>Team</code> account are dissociated from the account, but they can continue to use Amazon Chime as free users. To remove the suspension from suspended <code>Team</code> account users, invite them to the <code>Team</code> account again. You can use the <a>InviteUsers</a> action to do so.</p> <p>Users suspended from an <code>EnterpriseLWA</code> account are immediately signed out of Amazon Chime and are no longer able to sign in. To remove the suspension from suspended <code>EnterpriseLWA</code> account users, use the <a>BatchUnsuspendUser</a> action. </p> <p>To sign out users without suspending them, use the <a>LogoutUser</a> action.</p>",
                "operationId": "BatchSuspendUser",
                "parameters": [
                    {
                        "in": "query",
                        "name": "operation",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "suspend"
                            ]
                        }
                    },
                    {
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "UserErrors": {
                                            "description": "If the <a>BatchSuspendUser</a> action fails for one or more of the user IDs in the request, a list of the user IDs is returned, along with error codes and error messages.",
                                            "items": {
                                                "description": "The list of errors returned when errors are encountered during the <a>BatchSuspendUser</a>, <a>BatchUnsuspendUser</a>, or <a>BatchUpdateUser</a> actions. This includes user IDs, error codes, and error messages.",
                                                "properties": {
                                                    "ErrorCode": {
                                                        "description": "The error code.",
                                                        "enum": [
                                                            "Unauthorized",
                                                            "Forbidden",
                                                            "NotFound",
                                                            "BadRequest",
                                                            "Conflict",
                                                            "ServiceFailure",
                                                            "ServiceUnavailable",
                                                            "Unprocessable",
                                                            "Throttled",
                                                            "PreconditionFailed"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "ErrorMessage": {
                                                        "description": "The error message.",
                                                        "type": "string"
                                                    },
                                                    "UserId": {
                                                        "description": "The user ID for which the action failed.",
                                                        "pattern": ".*\\S.*",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "UnauthorizedClientException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ForbiddenException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ThrottledClientException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "486": {
                        "description": "ServiceFailureException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "UserIdList": {
                                        "description": "The request containing the user IDs to suspend.",
                                        "items": {
                                            "pattern": ".*\\S.*",
                                            "type": "string"
                                        },
                                        "maxItems": 50,
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "UserIdList"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/console/accounts/{accountId}/users#BatchUnsuspendUser": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Removes the suspension from up to 50 previously suspended users for the specified Amazon Chime <code>EnterpriseLWA</code> account. Only users on <code>EnterpriseLWA</code> accounts can be unsuspended using this action. For more information about different account types, see <a href=\"https://docs.aws.amazon.com/chime/latest/ag/manage-chime-account.html\">Managing Your Amazon Chime Accounts</a> in the <i>Amazon Chime Administration Guide</i>.</p> <p>Previously suspended users who are unsuspended using this action are returned to <code>Registered</code> status. Users who are not previously suspended are ignored.</p>",
                "operationId": "BatchUnsuspendUser",
                "parameters": [
                    {
                        "in": "query",
                        "name": "operation",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "unsuspend"
                            ]
                        }
                    },
                    {
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "UserErrors": {
                                            "description": "If the <a>BatchUnsuspendUser</a> action fails for one or more of the user IDs in the request, a list of the user IDs is returned, along with error codes and error messages.",
                                            "items": {
                                                "description": "The list of errors returned when errors are encountered during the <a>BatchSuspendUser</a>, <a>BatchUnsuspendUser</a>, or <a>BatchUpdateUser</a> actions. This includes user IDs, error codes, and error messages.",
                                                "properties": {
                                                    "ErrorCode": {
                                                        "description": "The error code.",
                                                        "enum": [
                                                            "Unauthorized",
                                                            "Forbidden",
                                                            "NotFound",
                                                            "BadRequest",
                                                            "Conflict",
                                                            "ServiceFailure",
                                                            "ServiceUnavailable",
                                                            "Unprocessable",
                                                            "Throttled",
                                                            "PreconditionFailed"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "ErrorMessage": {
                                                        "description": "The error message.",
                                                        "type": "string"
                                                    },
                                                    "UserId": {
                                                        "description": "The user ID for which the action failed.",
                                                        "pattern": ".*\\S.*",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "UnauthorizedClientException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ForbiddenException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ThrottledClientException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "486": {
                        "description": "ServiceFailureException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "UserIdList": {
                                        "description": "The request containing the user IDs to unsuspend.",
                                        "items": {
                                            "pattern": ".*\\S.*",
                                            "type": "string"
                                        },
                                        "maxItems": 50,
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "UserIdList"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/console/accounts/{accountId}/users#BatchUpdateUser": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Updates user details within the <a>UpdateUserRequestItem</a> object for up to 20 users for the specified Amazon Chime account. Currently, only <code>LicenseType</code> updates are supported for this action.",
                "operationId": "BatchUpdateUser",
                "parameters": [
                    {
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "UserErrors": {
                                            "description": "If the <a>BatchUpdateUser</a> action fails for one or more of the user IDs in the request, a list of the user IDs is returned, along with error codes and error messages.",
                                            "items": {
                                                "description": "The list of errors returned when errors are encountered during the <a>BatchSuspendUser</a>, <a>BatchUnsuspendUser</a>, or <a>BatchUpdateUser</a> actions. This includes user IDs, error codes, and error messages.",
                                                "properties": {
                                                    "ErrorCode": {
                                                        "description": "The error code.",
                                                        "enum": [
                                                            "Unauthorized",
                                                            "Forbidden",
                                                            "NotFound",
                                                            "BadRequest",
                                                            "Conflict",
                                                            "ServiceFailure",
                                                            "ServiceUnavailable",
                                                            "Unprocessable",
                                                            "Throttled",
                                                            "PreconditionFailed"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "ErrorMessage": {
                                                        "description": "The error message.",
                                                        "type": "string"
                                                    },
                                                    "UserId": {
                                                        "description": "The user ID for which the action failed.",
                                                        "pattern": ".*\\S.*",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "UnauthorizedClientException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ForbiddenException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ThrottledClientException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "486": {
                        "description": "ServiceFailureException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "UpdateUserRequestItems": {
                                        "description": "The request containing the user IDs and details to update.",
                                        "items": {
                                            "description": "The user ID and user fields to update, used with the <a>BatchUpdateUser</a> action.",
                                            "properties": {
                                                "LicenseType": {
                                                    "description": "The user license type.",
                                                    "enum": [
                                                        "Basic",
                                                        "Plus",
                                                        "Pro",
                                                        "ProTrial"
                                                    ],
                                                    "type": "string"
                                                },
                                                "UserId": {
                                                    "description": "The user ID.",
                                                    "pattern": ".*\\S.*",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "UserId"
                                            ],
                                            "type": "object"
                                        },
                                        "maxItems": 20,
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "UpdateUserRequestItems"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/console/accounts/{accountId}/users#InviteUsers": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Sends email invites to as many as 50 users, inviting them to the specified Amazon Chime <code>Team</code> account. Only <code>Team</code> account types are currently supported for this action. ",
                "operationId": "InviteUsers",
                "parameters": [
                    {
                        "in": "query",
                        "name": "operation",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "add"
                            ]
                        }
                    },
                    {
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Invites": {
                                            "description": "The invite details.",
                                            "items": {
                                                "description": "Invitation object returned after emailing users to invite them to join the Amazon Chime <code>Team</code> account.",
                                                "properties": {
                                                    "EmailAddress": {
                                                        "description": "The email address to which the invite is sent.",
                                                        "format": "password",
                                                        "pattern": ".+@.+\\..+",
                                                        "type": "string"
                                                    },
                                                    "EmailStatus": {
                                                        "description": "The status of the invite email.",
                                                        "enum": [
                                                            "NotSent",
                                                            "Sent",
                                                            "Failed"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "InviteId": {
                                                        "description": "The invite ID.",
                                                        "type": "string"
                                                    },
                                                    "Status": {
                                                        "description": "The status of the invite.",
                                                        "enum": [
                                                            "Pending",
                                                            "Accepted",
                                                            "Failed"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "UnauthorizedClientException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ForbiddenException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ThrottledClientException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "486": {
                        "description": "ServiceFailureException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "UserEmailList": {
                                        "description": "The user email addresses to which to send the invite.",
                                        "items": {
                                            "format": "password",
                                            "pattern": ".+@.+\\..+",
                                            "type": "string"
                                        },
                                        "maxItems": 50,
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "UserEmailList"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/console/accounts/{accountId}/users#ListUsers": {
            "get": {
                "description": "Lists the users that belong to the specified Amazon Chime account. You can specify an email address to list only the user that the email address belongs to.",
                "operationId": "ListUsers",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "MaxResults",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "NextToken",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "NextToken": {
                                            "description": "The token to use to retrieve the next page of results.",
                                            "type": "string"
                                        },
                                        "Users": {
                                            "description": "List of users and user details.",
                                            "items": {
                                                "description": "The user on the Amazon Chime account.",
                                                "properties": {
                                                    "AccountId": {
                                                        "description": "The Amazon Chime account ID.",
                                                        "type": "string"
                                                    },
                                                    "DisplayName": {
                                                        "description": "The display name of the user.",
                                                        "format": "password",
                                                        "type": "string"
                                                    },
                                                    "InvitedOn": {
                                                        "description": "Date and time when the user is invited to the Amazon Chime account, in ISO 8601 format.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "LicenseType": {
                                                        "description": "The license type for the user.",
                                                        "enum": [
                                                            "Basic",
                                                            "Plus",
                                                            "Pro",
                                                            "ProTrial"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "PersonalPIN": {
                                                        "description": "The user's personal meeting PIN.",
                                                        "type": "string"
                                                    },
                                                    "PrimaryEmail": {
                                                        "description": "The primary email address of the user.",
                                                        "format": "password",
                                                        "pattern": ".+@.+\\..+",
                                                        "type": "string"
                                                    },
                                                    "RegisteredOn": {
                                                        "description": "Date and time when the user is registered, in ISO 8601 format.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "UserId": {
                                                        "description": "The user ID.",
                                                        "type": "string"
                                                    },
                                                    "UserInvitationStatus": {
                                                        "description": "The user invite status.",
                                                        "enum": [
                                                            "Pending",
                                                            "Accepted",
                                                            "Failed"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "UserRegistrationStatus": {
                                                        "description": "The user registration status.",
                                                        "enum": [
                                                            "Unregistered",
                                                            "Registered",
                                                            "Suspended"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "UserId"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "UnauthorizedClientException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ForbiddenException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ThrottledClientException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "486": {
                        "description": "ServiceFailureException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/console/accounts/{accountId}/users/{userId}#GetUser": {
            "get": {
                "description": "<p>Retrieves details for the specified user ID, such as primary email address, license type, and personal meeting PIN.</p> <p>To retrieve user details with an email address instead of a user ID, use the <a>ListUsers</a> action, and then filter by email address.</p>",
                "operationId": "GetUser",
                "parameters": [
                    {
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "userId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "User": {
                                            "description": "The user details.",
                                            "properties": {
                                                "AccountId": {
                                                    "description": "The Amazon Chime account ID.",
                                                    "type": "string"
                                                },
                                                "DisplayName": {
                                                    "description": "The display name of the user.",
                                                    "format": "password",
                                                    "type": "string"
                                                },
                                                "InvitedOn": {
                                                    "description": "Date and time when the user is invited to the Amazon Chime account, in ISO 8601 format.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "LicenseType": {
                                                    "description": "The license type for the user.",
                                                    "enum": [
                                                        "Basic",
                                                        "Plus",
                                                        "Pro",
                                                        "ProTrial"
                                                    ],
                                                    "type": "string"
                                                },
                                                "PersonalPIN": {
                                                    "description": "The user's personal meeting PIN.",
                                                    "type": "string"
                                                },
                                                "PrimaryEmail": {
                                                    "description": "The primary email address of the user.",
                                                    "format": "password",
                                                    "pattern": ".+@.+\\..+",
                                                    "type": "string"
                                                },
                                                "RegisteredOn": {
                                                    "description": "Date and time when the user is registered, in ISO 8601 format.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "UserId": {
                                                    "description": "The user ID.",
                                                    "type": "string"
                                                },
                                                "UserInvitationStatus": {
                                                    "description": "The user invite status.",
                                                    "enum": [
                                                        "Pending",
                                                        "Accepted",
                                                        "Failed"
                                                    ],
                                                    "type": "string"
                                                },
                                                "UserRegistrationStatus": {
                                                    "description": "The user registration status.",
                                                    "enum": [
                                                        "Unregistered",
                                                        "Registered",
                                                        "Suspended"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "UserId"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "UnauthorizedClientException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ForbiddenException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ThrottledClientException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "486": {
                        "description": "ServiceFailureException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/console/accounts/{accountId}/users/{userId}#LogoutUser": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Logs out the specified user from all of the devices they are currently logged into.",
                "operationId": "LogoutUser",
                "parameters": [
                    {
                        "in": "query",
                        "name": "operation",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "logout"
                            ]
                        }
                    },
                    {
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "userId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "UnauthorizedClientException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ForbiddenException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ThrottledClientException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "486": {
                        "description": "ServiceFailureException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/console/accounts/{accountId}/users/{userId}#ResetPersonalPIN": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Resets the personal meeting PIN for the specified user on an Amazon Chime account. Returns the <a>User</a> object with the updated personal meeting PIN.",
                "operationId": "ResetPersonalPIN",
                "parameters": [
                    {
                        "in": "query",
                        "name": "operation",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "reset-personal-pin"
                            ]
                        }
                    },
                    {
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "userId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "User": {
                                            "description": "The user details and new personal meeting PIN.",
                                            "properties": {
                                                "AccountId": {
                                                    "description": "The Amazon Chime account ID.",
                                                    "type": "string"
                                                },
                                                "DisplayName": {
                                                    "description": "The display name of the user.",
                                                    "format": "password",
                                                    "type": "string"
                                                },
                                                "InvitedOn": {
                                                    "description": "Date and time when the user is invited to the Amazon Chime account, in ISO 8601 format.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "LicenseType": {
                                                    "description": "The license type for the user.",
                                                    "enum": [
                                                        "Basic",
                                                        "Plus",
                                                        "Pro",
                                                        "ProTrial"
                                                    ],
                                                    "type": "string"
                                                },
                                                "PersonalPIN": {
                                                    "description": "The user's personal meeting PIN.",
                                                    "type": "string"
                                                },
                                                "PrimaryEmail": {
                                                    "description": "The primary email address of the user.",
                                                    "format": "password",
                                                    "pattern": ".+@.+\\..+",
                                                    "type": "string"
                                                },
                                                "RegisteredOn": {
                                                    "description": "Date and time when the user is registered, in ISO 8601 format.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "UserId": {
                                                    "description": "The user ID.",
                                                    "type": "string"
                                                },
                                                "UserInvitationStatus": {
                                                    "description": "The user invite status.",
                                                    "enum": [
                                                        "Pending",
                                                        "Accepted",
                                                        "Failed"
                                                    ],
                                                    "type": "string"
                                                },
                                                "UserRegistrationStatus": {
                                                    "description": "The user registration status.",
                                                    "enum": [
                                                        "Unregistered",
                                                        "Registered",
                                                        "Suspended"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "UserId"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "UnauthorizedClientException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ForbiddenException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ThrottledClientException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "486": {
                        "description": "ServiceFailureException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/console/accounts/{accountId}/users/{userId}#UpdateUser": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Updates user details for a specified user ID. Currently, only <code>LicenseType</code> updates are supported for this action.",
                "operationId": "UpdateUser",
                "parameters": [
                    {
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "userId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "User": {
                                            "description": "The updated user details.",
                                            "properties": {
                                                "AccountId": {
                                                    "description": "The Amazon Chime account ID.",
                                                    "type": "string"
                                                },
                                                "DisplayName": {
                                                    "description": "The display name of the user.",
                                                    "format": "password",
                                                    "type": "string"
                                                },
                                                "InvitedOn": {
                                                    "description": "Date and time when the user is invited to the Amazon Chime account, in ISO 8601 format.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "LicenseType": {
                                                    "description": "The license type for the user.",
                                                    "enum": [
                                                        "Basic",
                                                        "Plus",
                                                        "Pro",
                                                        "ProTrial"
                                                    ],
                                                    "type": "string"
                                                },
                                                "PersonalPIN": {
                                                    "description": "The user's personal meeting PIN.",
                                                    "type": "string"
                                                },
                                                "PrimaryEmail": {
                                                    "description": "The primary email address of the user.",
                                                    "format": "password",
                                                    "pattern": ".+@.+\\..+",
                                                    "type": "string"
                                                },
                                                "RegisteredOn": {
                                                    "description": "Date and time when the user is registered, in ISO 8601 format.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "UserId": {
                                                    "description": "The user ID.",
                                                    "type": "string"
                                                },
                                                "UserInvitationStatus": {
                                                    "description": "The user invite status.",
                                                    "enum": [
                                                        "Pending",
                                                        "Accepted",
                                                        "Failed"
                                                    ],
                                                    "type": "string"
                                                },
                                                "UserRegistrationStatus": {
                                                    "description": "The user registration status.",
                                                    "enum": [
                                                        "Unregistered",
                                                        "Registered",
                                                        "Suspended"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "UserId"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "UnauthorizedClientException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ForbiddenException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ThrottledClientException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "486": {
                        "description": "ServiceFailureException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "LicenseType": {
                                        "description": "The user license type to update. This must be a supported license type for the Amazon Chime account that the user belongs to.",
                                        "enum": [
                                            "Basic",
                                            "Plus",
                                            "Pro",
                                            "ProTrial"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Account": {
                "description": "The Amazon Chime account details. An AWS account can have multiple Amazon Chime accounts.",
                "properties": {
                    "AccountId": {
                        "description": "The Amazon Chime account ID.",
                        "type": "string"
                    },
                    "AccountType": {
                        "description": "The Amazon Chime account type. For more information about different account types, see <a href=\"https://docs.aws.amazon.com/chime/latest/ag/manage-chime-account.html\">Managing Your Amazon Chime Accounts</a> in the <i>Amazon Chime Administration Guide</i>.",
                        "enum": [
                            "Team",
                            "EnterpriseDirectory",
                            "EnterpriseLWA",
                            "EnterpriseOIDC"
                        ],
                        "type": "string"
                    },
                    "AwsAccountId": {
                        "description": "The AWS account ID.",
                        "type": "string"
                    },
                    "CreatedTimestamp": {
                        "description": "The Amazon Chime account creation timestamp, in ISO 8601 format.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "DefaultLicense": {
                        "description": "The default license for the Amazon Chime account.",
                        "enum": [
                            "Basic",
                            "Plus",
                            "Pro",
                            "ProTrial"
                        ],
                        "type": "string"
                    },
                    "Name": {
                        "description": "The Amazon Chime account name.",
                        "type": "string"
                    },
                    "SupportedLicenses": {
                        "description": "Supported licenses for the Amazon Chime account.",
                        "items": {
                            "enum": [
                                "Basic",
                                "Plus",
                                "Pro",
                                "ProTrial"
                            ],
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "AwsAccountId",
                    "AccountId",
                    "Name"
                ],
                "type": "object"
            },
            "AccountList": {
                "items": {
                    "description": "The Amazon Chime account details. An AWS account can have multiple Amazon Chime accounts.",
                    "properties": {
                        "AccountId": {
                            "description": "The Amazon Chime account ID.",
                            "type": "string"
                        },
                        "AccountType": {
                            "description": "The Amazon Chime account type. For more information about different account types, see <a href=\"https://docs.aws.amazon.com/chime/latest/ag/manage-chime-account.html\">Managing Your Amazon Chime Accounts</a> in the <i>Amazon Chime Administration Guide</i>.",
                            "enum": [
                                "Team",
                                "EnterpriseDirectory",
                                "EnterpriseLWA",
                                "EnterpriseOIDC"
                            ],
                            "type": "string"
                        },
                        "AwsAccountId": {
                            "description": "The AWS account ID.",
                            "type": "string"
                        },
                        "CreatedTimestamp": {
                            "description": "The Amazon Chime account creation timestamp, in ISO 8601 format.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "DefaultLicense": {
                            "description": "The default license for the Amazon Chime account.",
                            "enum": [
                                "Basic",
                                "Plus",
                                "Pro",
                                "ProTrial"
                            ],
                            "type": "string"
                        },
                        "Name": {
                            "description": "The Amazon Chime account name.",
                            "type": "string"
                        },
                        "SupportedLicenses": {
                            "description": "Supported licenses for the Amazon Chime account.",
                            "items": {
                                "enum": [
                                    "Basic",
                                    "Plus",
                                    "Pro",
                                    "ProTrial"
                                ],
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    "required": [
                        "AwsAccountId",
                        "AccountId",
                        "Name"
                    ],
                    "type": "object"
                },
                "type": "array"
            },
            "AccountName": {
                "maxLength": 100,
                "minLength": 1,
                "pattern": ".*\\S.*",
                "type": "string"
            },
            "AccountSettings": {
                "description": "Settings related to the Amazon Chime account. This includes settings that start or stop remote control of shared screens, or start or stop the dial-out option in the Amazon Chime web application. For more information about these settings, see <a href=\"https://docs.aws.amazon.com/chime/latest/ag/policies.html\">Use the Policies Page</a> in the <i>Amazon Chime Administration Guide</i>.",
                "properties": {
                    "DisableRemoteControl": {
                        "description": "Setting that stops or starts remote control of shared screens during meetings.",
                        "type": "boolean"
                    },
                    "EnableDialOut": {
                        "description": "Setting that allows meeting participants to choose the <b>Call me at a phone number</b> option. For more information, see <a href=\"https://docs.aws.amazon.com/chime/latest/ug/chime-join-meeting.html\">Join a Meeting without the Amazon Chime App</a>.",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "AccountType": {
                "enum": [
                    "Team",
                    "EnterpriseDirectory",
                    "EnterpriseLWA",
                    "EnterpriseOIDC"
                ],
                "type": "string"
            },
            "BadRequestException": {},
            "BatchSuspendUserRequest": {
                "properties": {
                    "UserIdList": {
                        "description": "The request containing the user IDs to suspend.",
                        "items": {
                            "pattern": ".*\\S.*",
                            "type": "string"
                        },
                        "maxItems": 50,
                        "type": "array"
                    }
                },
                "required": [
                    "UserIdList"
                ],
                "type": "object"
            },
            "BatchSuspendUserResponse": {
                "properties": {
                    "UserErrors": {
                        "description": "If the <a>BatchSuspendUser</a> action fails for one or more of the user IDs in the request, a list of the user IDs is returned, along with error codes and error messages.",
                        "items": {
                            "description": "The list of errors returned when errors are encountered during the <a>BatchSuspendUser</a>, <a>BatchUnsuspendUser</a>, or <a>BatchUpdateUser</a> actions. This includes user IDs, error codes, and error messages.",
                            "properties": {
                                "ErrorCode": {
                                    "description": "The error code.",
                                    "enum": [
                                        "Unauthorized",
                                        "Forbidden",
                                        "NotFound",
                                        "BadRequest",
                                        "Conflict",
                                        "ServiceFailure",
                                        "ServiceUnavailable",
                                        "Unprocessable",
                                        "Throttled",
                                        "PreconditionFailed"
                                    ],
                                    "type": "string"
                                },
                                "ErrorMessage": {
                                    "description": "The error message.",
                                    "type": "string"
                                },
                                "UserId": {
                                    "description": "The user ID for which the action failed.",
                                    "pattern": ".*\\S.*",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "BatchUnsuspendUserRequest": {
                "properties": {
                    "UserIdList": {
                        "description": "The request containing the user IDs to unsuspend.",
                        "items": {
                            "pattern": ".*\\S.*",
                            "type": "string"
                        },
                        "maxItems": 50,
                        "type": "array"
                    }
                },
                "required": [
                    "UserIdList"
                ],
                "type": "object"
            },
            "BatchUnsuspendUserResponse": {
                "properties": {
                    "UserErrors": {
                        "description": "If the <a>BatchUnsuspendUser</a> action fails for one or more of the user IDs in the request, a list of the user IDs is returned, along with error codes and error messages.",
                        "items": {
                            "description": "The list of errors returned when errors are encountered during the <a>BatchSuspendUser</a>, <a>BatchUnsuspendUser</a>, or <a>BatchUpdateUser</a> actions. This includes user IDs, error codes, and error messages.",
                            "properties": {
                                "ErrorCode": {
                                    "description": "The error code.",
                                    "enum": [
                                        "Unauthorized",
                                        "Forbidden",
                                        "NotFound",
                                        "BadRequest",
                                        "Conflict",
                                        "ServiceFailure",
                                        "ServiceUnavailable",
                                        "Unprocessable",
                                        "Throttled",
                                        "PreconditionFailed"
                                    ],
                                    "type": "string"
                                },
                                "ErrorMessage": {
                                    "description": "The error message.",
                                    "type": "string"
                                },
                                "UserId": {
                                    "description": "The user ID for which the action failed.",
                                    "pattern": ".*\\S.*",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "BatchUpdateUserRequest": {
                "properties": {
                    "UpdateUserRequestItems": {
                        "description": "The request containing the user IDs and details to update.",
                        "items": {
                            "description": "The user ID and user fields to update, used with the <a>BatchUpdateUser</a> action.",
                            "properties": {
                                "LicenseType": {
                                    "description": "The user license type.",
                                    "enum": [
                                        "Basic",
                                        "Plus",
                                        "Pro",
                                        "ProTrial"
                                    ],
                                    "type": "string"
                                },
                                "UserId": {
                                    "description": "The user ID.",
                                    "pattern": ".*\\S.*",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "UserId"
                            ],
                            "type": "object"
                        },
                        "maxItems": 20,
                        "type": "array"
                    }
                },
                "required": [
                    "UpdateUserRequestItems"
                ],
                "type": "object"
            },
            "BatchUpdateUserResponse": {
                "properties": {
                    "UserErrors": {
                        "description": "If the <a>BatchUpdateUser</a> action fails for one or more of the user IDs in the request, a list of the user IDs is returned, along with error codes and error messages.",
                        "items": {
                            "description": "The list of errors returned when errors are encountered during the <a>BatchSuspendUser</a>, <a>BatchUnsuspendUser</a>, or <a>BatchUpdateUser</a> actions. This includes user IDs, error codes, and error messages.",
                            "properties": {
                                "ErrorCode": {
                                    "description": "The error code.",
                                    "enum": [
                                        "Unauthorized",
                                        "Forbidden",
                                        "NotFound",
                                        "BadRequest",
                                        "Conflict",
                                        "ServiceFailure",
                                        "ServiceUnavailable",
                                        "Unprocessable",
                                        "Throttled",
                                        "PreconditionFailed"
                                    ],
                                    "type": "string"
                                },
                                "ErrorMessage": {
                                    "description": "The error message.",
                                    "type": "string"
                                },
                                "UserId": {
                                    "description": "The user ID for which the action failed.",
                                    "pattern": ".*\\S.*",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "Boolean": {
                "type": "boolean"
            },
            "ConflictException": {},
            "CreateAccountRequest": {
                "properties": {
                    "Name": {
                        "description": "The name of the Amazon Chime account.",
                        "maxLength": 100,
                        "minLength": 1,
                        "pattern": ".*\\S.*",
                        "type": "string"
                    }
                },
                "required": [
                    "Name"
                ],
                "type": "object"
            },
            "CreateAccountResponse": {
                "properties": {
                    "Account": {
                        "description": "The Amazon Chime account details.",
                        "properties": {
                            "AccountId": {
                                "description": "The Amazon Chime account ID.",
                                "type": "string"
                            },
                            "AccountType": {
                                "description": "The Amazon Chime account type. For more information about different account types, see <a href=\"https://docs.aws.amazon.com/chime/latest/ag/manage-chime-account.html\">Managing Your Amazon Chime Accounts</a> in the <i>Amazon Chime Administration Guide</i>.",
                                "enum": [
                                    "Team",
                                    "EnterpriseDirectory",
                                    "EnterpriseLWA",
                                    "EnterpriseOIDC"
                                ],
                                "type": "string"
                            },
                            "AwsAccountId": {
                                "description": "The AWS account ID.",
                                "type": "string"
                            },
                            "CreatedTimestamp": {
                                "description": "The Amazon Chime account creation timestamp, in ISO 8601 format.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "DefaultLicense": {
                                "description": "The default license for the Amazon Chime account.",
                                "enum": [
                                    "Basic",
                                    "Plus",
                                    "Pro",
                                    "ProTrial"
                                ],
                                "type": "string"
                            },
                            "Name": {
                                "description": "The Amazon Chime account name.",
                                "type": "string"
                            },
                            "SupportedLicenses": {
                                "description": "Supported licenses for the Amazon Chime account.",
                                "items": {
                                    "enum": [
                                        "Basic",
                                        "Plus",
                                        "Pro",
                                        "ProTrial"
                                    ],
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        },
                        "required": [
                            "AwsAccountId",
                            "AccountId",
                            "Name"
                        ],
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "DeleteAccountRequest": {
                "properties": {},
                "type": "object"
            },
            "DeleteAccountResponse": {
                "properties": {},
                "type": "object"
            },
            "EmailAddress": {
                "format": "password",
                "pattern": ".+@.+\\..+",
                "type": "string"
            },
            "EmailStatus": {
                "enum": [
                    "NotSent",
                    "Sent",
                    "Failed"
                ],
                "type": "string"
            },
            "ErrorCode": {
                "enum": [
                    "Unauthorized",
                    "Forbidden",
                    "NotFound",
                    "BadRequest",
                    "Conflict",
                    "ServiceFailure",
                    "ServiceUnavailable",
                    "Unprocessable",
                    "Throttled",
                    "PreconditionFailed"
                ],
                "type": "string"
            },
            "ForbiddenException": {},
            "GetAccountRequest": {
                "properties": {},
                "type": "object"
            },
            "GetAccountResponse": {
                "properties": {
                    "Account": {
                        "description": "The Amazon Chime account details.",
                        "properties": {
                            "AccountId": {
                                "description": "The Amazon Chime account ID.",
                                "type": "string"
                            },
                            "AccountType": {
                                "description": "The Amazon Chime account type. For more information about different account types, see <a href=\"https://docs.aws.amazon.com/chime/latest/ag/manage-chime-account.html\">Managing Your Amazon Chime Accounts</a> in the <i>Amazon Chime Administration Guide</i>.",
                                "enum": [
                                    "Team",
                                    "EnterpriseDirectory",
                                    "EnterpriseLWA",
                                    "EnterpriseOIDC"
                                ],
                                "type": "string"
                            },
                            "AwsAccountId": {
                                "description": "The AWS account ID.",
                                "type": "string"
                            },
                            "CreatedTimestamp": {
                                "description": "The Amazon Chime account creation timestamp, in ISO 8601 format.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "DefaultLicense": {
                                "description": "The default license for the Amazon Chime account.",
                                "enum": [
                                    "Basic",
                                    "Plus",
                                    "Pro",
                                    "ProTrial"
                                ],
                                "type": "string"
                            },
                            "Name": {
                                "description": "The Amazon Chime account name.",
                                "type": "string"
                            },
                            "SupportedLicenses": {
                                "description": "Supported licenses for the Amazon Chime account.",
                                "items": {
                                    "enum": [
                                        "Basic",
                                        "Plus",
                                        "Pro",
                                        "ProTrial"
                                    ],
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        },
                        "required": [
                            "AwsAccountId",
                            "AccountId",
                            "Name"
                        ],
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "GetAccountSettingsRequest": {
                "properties": {},
                "type": "object"
            },
            "GetAccountSettingsResponse": {
                "properties": {
                    "AccountSettings": {
                        "description": "The Amazon Chime account settings.",
                        "properties": {
                            "DisableRemoteControl": {
                                "description": "Setting that stops or starts remote control of shared screens during meetings.",
                                "type": "boolean"
                            },
                            "EnableDialOut": {
                                "description": "Setting that allows meeting participants to choose the <b>Call me at a phone number</b> option. For more information, see <a href=\"https://docs.aws.amazon.com/chime/latest/ug/chime-join-meeting.html\">Join a Meeting without the Amazon Chime App</a>.",
                                "type": "boolean"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "GetUserRequest": {
                "properties": {},
                "type": "object"
            },
            "GetUserResponse": {
                "properties": {
                    "User": {
                        "description": "The user details.",
                        "properties": {
                            "AccountId": {
                                "description": "The Amazon Chime account ID.",
                                "type": "string"
                            },
                            "DisplayName": {
                                "description": "The display name of the user.",
                                "format": "password",
                                "type": "string"
                            },
                            "InvitedOn": {
                                "description": "Date and time when the user is invited to the Amazon Chime account, in ISO 8601 format.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "LicenseType": {
                                "description": "The license type for the user.",
                                "enum": [
                                    "Basic",
                                    "Plus",
                                    "Pro",
                                    "ProTrial"
                                ],
                                "type": "string"
                            },
                            "PersonalPIN": {
                                "description": "The user's personal meeting PIN.",
                                "type": "string"
                            },
                            "PrimaryEmail": {
                                "description": "The primary email address of the user.",
                                "format": "password",
                                "pattern": ".+@.+\\..+",
                                "type": "string"
                            },
                            "RegisteredOn": {
                                "description": "Date and time when the user is registered, in ISO 8601 format.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "UserId": {
                                "description": "The user ID.",
                                "type": "string"
                            },
                            "UserInvitationStatus": {
                                "description": "The user invite status.",
                                "enum": [
                                    "Pending",
                                    "Accepted",
                                    "Failed"
                                ],
                                "type": "string"
                            },
                            "UserRegistrationStatus": {
                                "description": "The user registration status.",
                                "enum": [
                                    "Unregistered",
                                    "Registered",
                                    "Suspended"
                                ],
                                "type": "string"
                            }
                        },
                        "required": [
                            "UserId"
                        ],
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "Invite": {
                "description": "Invitation object returned after emailing users to invite them to join the Amazon Chime <code>Team</code> account.",
                "properties": {
                    "EmailAddress": {
                        "description": "The email address to which the invite is sent.",
                        "format": "password",
                        "pattern": ".+@.+\\..+",
                        "type": "string"
                    },
                    "EmailStatus": {
                        "description": "The status of the invite email.",
                        "enum": [
                            "NotSent",
                            "Sent",
                            "Failed"
                        ],
                        "type": "string"
                    },
                    "InviteId": {
                        "description": "The invite ID.",
                        "type": "string"
                    },
                    "Status": {
                        "description": "The status of the invite.",
                        "enum": [
                            "Pending",
                            "Accepted",
                            "Failed"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "InviteList": {
                "items": {
                    "description": "Invitation object returned after emailing users to invite them to join the Amazon Chime <code>Team</code> account.",
                    "properties": {
                        "EmailAddress": {
                            "description": "The email address to which the invite is sent.",
                            "format": "password",
                            "pattern": ".+@.+\\..+",
                            "type": "string"
                        },
                        "EmailStatus": {
                            "description": "The status of the invite email.",
                            "enum": [
                                "NotSent",
                                "Sent",
                                "Failed"
                            ],
                            "type": "string"
                        },
                        "InviteId": {
                            "description": "The invite ID.",
                            "type": "string"
                        },
                        "Status": {
                            "description": "The status of the invite.",
                            "enum": [
                                "Pending",
                                "Accepted",
                                "Failed"
                            ],
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "InviteStatus": {
                "enum": [
                    "Pending",
                    "Accepted",
                    "Failed"
                ],
                "type": "string"
            },
            "InviteUsersRequest": {
                "properties": {
                    "UserEmailList": {
                        "description": "The user email addresses to which to send the invite.",
                        "items": {
                            "format": "password",
                            "pattern": ".+@.+\\..+",
                            "type": "string"
                        },
                        "maxItems": 50,
                        "type": "array"
                    }
                },
                "required": [
                    "UserEmailList"
                ],
                "type": "object"
            },
            "InviteUsersResponse": {
                "properties": {
                    "Invites": {
                        "description": "The invite details.",
                        "items": {
                            "description": "Invitation object returned after emailing users to invite them to join the Amazon Chime <code>Team</code> account.",
                            "properties": {
                                "EmailAddress": {
                                    "description": "The email address to which the invite is sent.",
                                    "format": "password",
                                    "pattern": ".+@.+\\..+",
                                    "type": "string"
                                },
                                "EmailStatus": {
                                    "description": "The status of the invite email.",
                                    "enum": [
                                        "NotSent",
                                        "Sent",
                                        "Failed"
                                    ],
                                    "type": "string"
                                },
                                "InviteId": {
                                    "description": "The invite ID.",
                                    "type": "string"
                                },
                                "Status": {
                                    "description": "The status of the invite.",
                                    "enum": [
                                        "Pending",
                                        "Accepted",
                                        "Failed"
                                    ],
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "Iso8601Timestamp": {
                "format": "date-time",
                "type": "string"
            },
            "License": {
                "enum": [
                    "Basic",
                    "Plus",
                    "Pro",
                    "ProTrial"
                ],
                "type": "string"
            },
            "LicenseList": {
                "items": {
                    "enum": [
                        "Basic",
                        "Plus",
                        "Pro",
                        "ProTrial"
                    ],
                    "type": "string"
                },
                "type": "array"
            },
            "ListAccountsRequest": {
                "properties": {},
                "type": "object"
            },
            "ListAccountsResponse": {
                "properties": {
                    "Accounts": {
                        "description": "List of Amazon Chime accounts and account details.",
                        "items": {
                            "description": "The Amazon Chime account details. An AWS account can have multiple Amazon Chime accounts.",
                            "properties": {
                                "AccountId": {
                                    "description": "The Amazon Chime account ID.",
                                    "type": "string"
                                },
                                "AccountType": {
                                    "description": "The Amazon Chime account type. For more information about different account types, see <a href=\"https://docs.aws.amazon.com/chime/latest/ag/manage-chime-account.html\">Managing Your Amazon Chime Accounts</a> in the <i>Amazon Chime Administration Guide</i>.",
                                    "enum": [
                                        "Team",
                                        "EnterpriseDirectory",
                                        "EnterpriseLWA",
                                        "EnterpriseOIDC"
                                    ],
                                    "type": "string"
                                },
                                "AwsAccountId": {
                                    "description": "The AWS account ID.",
                                    "type": "string"
                                },
                                "CreatedTimestamp": {
                                    "description": "The Amazon Chime account creation timestamp, in ISO 8601 format.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "DefaultLicense": {
                                    "description": "The default license for the Amazon Chime account.",
                                    "enum": [
                                        "Basic",
                                        "Plus",
                                        "Pro",
                                        "ProTrial"
                                    ],
                                    "type": "string"
                                },
                                "Name": {
                                    "description": "The Amazon Chime account name.",
                                    "type": "string"
                                },
                                "SupportedLicenses": {
                                    "description": "Supported licenses for the Amazon Chime account.",
                                    "items": {
                                        "enum": [
                                            "Basic",
                                            "Plus",
                                            "Pro",
                                            "ProTrial"
                                        ],
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "AwsAccountId",
                                "AccountId",
                                "Name"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "NextToken": {
                        "description": "The token to use to retrieve the next page of results.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ListUsersRequest": {
                "properties": {},
                "type": "object"
            },
            "ListUsersResponse": {
                "properties": {
                    "NextToken": {
                        "description": "The token to use to retrieve the next page of results.",
                        "type": "string"
                    },
                    "Users": {
                        "description": "List of users and user details.",
                        "items": {
                            "description": "The user on the Amazon Chime account.",
                            "properties": {
                                "AccountId": {
                                    "description": "The Amazon Chime account ID.",
                                    "type": "string"
                                },
                                "DisplayName": {
                                    "description": "The display name of the user.",
                                    "format": "password",
                                    "type": "string"
                                },
                                "InvitedOn": {
                                    "description": "Date and time when the user is invited to the Amazon Chime account, in ISO 8601 format.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "LicenseType": {
                                    "description": "The license type for the user.",
                                    "enum": [
                                        "Basic",
                                        "Plus",
                                        "Pro",
                                        "ProTrial"
                                    ],
                                    "type": "string"
                                },
                                "PersonalPIN": {
                                    "description": "The user's personal meeting PIN.",
                                    "type": "string"
                                },
                                "PrimaryEmail": {
                                    "description": "The primary email address of the user.",
                                    "format": "password",
                                    "pattern": ".+@.+\\..+",
                                    "type": "string"
                                },
                                "RegisteredOn": {
                                    "description": "Date and time when the user is registered, in ISO 8601 format.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "UserId": {
                                    "description": "The user ID.",
                                    "type": "string"
                                },
                                "UserInvitationStatus": {
                                    "description": "The user invite status.",
                                    "enum": [
                                        "Pending",
                                        "Accepted",
                                        "Failed"
                                    ],
                                    "type": "string"
                                },
                                "UserRegistrationStatus": {
                                    "description": "The user registration status.",
                                    "enum": [
                                        "Unregistered",
                                        "Registered",
                                        "Suspended"
                                    ],
                                    "type": "string"
                                }
                            },
                            "required": [
                                "UserId"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "LogoutUserRequest": {
                "properties": {},
                "type": "object"
            },
            "LogoutUserResponse": {
                "properties": {},
                "type": "object"
            },
            "NonEmptyString": {
                "pattern": ".*\\S.*",
                "type": "string"
            },
            "NotFoundException": {},
            "ProfileServiceMaxResults": {
                "maximum": 200,
                "minimum": 1,
                "type": "integer"
            },
            "RegistrationStatus": {
                "enum": [
                    "Unregistered",
                    "Registered",
                    "Suspended"
                ],
                "type": "string"
            },
            "ResetPersonalPINRequest": {
                "properties": {},
                "type": "object"
            },
            "ResetPersonalPINResponse": {
                "properties": {
                    "User": {
                        "description": "The user details and new personal meeting PIN.",
                        "properties": {
                            "AccountId": {
                                "description": "The Amazon Chime account ID.",
                                "type": "string"
                            },
                            "DisplayName": {
                                "description": "The display name of the user.",
                                "format": "password",
                                "type": "string"
                            },
                            "InvitedOn": {
                                "description": "Date and time when the user is invited to the Amazon Chime account, in ISO 8601 format.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "LicenseType": {
                                "description": "The license type for the user.",
                                "enum": [
                                    "Basic",
                                    "Plus",
                                    "Pro",
                                    "ProTrial"
                                ],
                                "type": "string"
                            },
                            "PersonalPIN": {
                                "description": "The user's personal meeting PIN.",
                                "type": "string"
                            },
                            "PrimaryEmail": {
                                "description": "The primary email address of the user.",
                                "format": "password",
                                "pattern": ".+@.+\\..+",
                                "type": "string"
                            },
                            "RegisteredOn": {
                                "description": "Date and time when the user is registered, in ISO 8601 format.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "UserId": {
                                "description": "The user ID.",
                                "type": "string"
                            },
                            "UserInvitationStatus": {
                                "description": "The user invite status.",
                                "enum": [
                                    "Pending",
                                    "Accepted",
                                    "Failed"
                                ],
                                "type": "string"
                            },
                            "UserRegistrationStatus": {
                                "description": "The user registration status.",
                                "enum": [
                                    "Unregistered",
                                    "Registered",
                                    "Suspended"
                                ],
                                "type": "string"
                            }
                        },
                        "required": [
                            "UserId"
                        ],
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "SensitiveString": {
                "format": "password",
                "type": "string"
            },
            "ServiceFailureException": {},
            "ServiceUnavailableException": {},
            "String": {
                "type": "string"
            },
            "ThrottledClientException": {},
            "UnauthorizedClientException": {},
            "UnprocessableEntityException": {},
            "UpdateAccountRequest": {
                "properties": {
                    "Name": {
                        "description": "The new name for the specified Amazon Chime account.",
                        "maxLength": 100,
                        "minLength": 1,
                        "pattern": ".*\\S.*",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UpdateAccountResponse": {
                "properties": {
                    "Account": {
                        "description": "The updated Amazon Chime account details.",
                        "properties": {
                            "AccountId": {
                                "description": "The Amazon Chime account ID.",
                                "type": "string"
                            },
                            "AccountType": {
                                "description": "The Amazon Chime account type. For more information about different account types, see <a href=\"https://docs.aws.amazon.com/chime/latest/ag/manage-chime-account.html\">Managing Your Amazon Chime Accounts</a> in the <i>Amazon Chime Administration Guide</i>.",
                                "enum": [
                                    "Team",
                                    "EnterpriseDirectory",
                                    "EnterpriseLWA",
                                    "EnterpriseOIDC"
                                ],
                                "type": "string"
                            },
                            "AwsAccountId": {
                                "description": "The AWS account ID.",
                                "type": "string"
                            },
                            "CreatedTimestamp": {
                                "description": "The Amazon Chime account creation timestamp, in ISO 8601 format.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "DefaultLicense": {
                                "description": "The default license for the Amazon Chime account.",
                                "enum": [
                                    "Basic",
                                    "Plus",
                                    "Pro",
                                    "ProTrial"
                                ],
                                "type": "string"
                            },
                            "Name": {
                                "description": "The Amazon Chime account name.",
                                "type": "string"
                            },
                            "SupportedLicenses": {
                                "description": "Supported licenses for the Amazon Chime account.",
                                "items": {
                                    "enum": [
                                        "Basic",
                                        "Plus",
                                        "Pro",
                                        "ProTrial"
                                    ],
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        },
                        "required": [
                            "AwsAccountId",
                            "AccountId",
                            "Name"
                        ],
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "UpdateAccountSettingsRequest": {
                "properties": {
                    "AccountSettings": {
                        "description": "The Amazon Chime account settings to update.",
                        "properties": {
                            "DisableRemoteControl": {
                                "description": "Setting that stops or starts remote control of shared screens during meetings.",
                                "type": "boolean"
                            },
                            "EnableDialOut": {
                                "description": "Setting that allows meeting participants to choose the <b>Call me at a phone number</b> option. For more information, see <a href=\"https://docs.aws.amazon.com/chime/latest/ug/chime-join-meeting.html\">Join a Meeting without the Amazon Chime App</a>.",
                                "type": "boolean"
                            }
                        },
                        "type": "object"
                    }
                },
                "required": [
                    "AccountSettings"
                ],
                "type": "object"
            },
            "UpdateAccountSettingsResponse": {
                "properties": {},
                "type": "object"
            },
            "UpdateUserRequest": {
                "properties": {
                    "LicenseType": {
                        "description": "The user license type to update. This must be a supported license type for the Amazon Chime account that the user belongs to.",
                        "enum": [
                            "Basic",
                            "Plus",
                            "Pro",
                            "ProTrial"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UpdateUserRequestItem": {
                "description": "The user ID and user fields to update, used with the <a>BatchUpdateUser</a> action.",
                "properties": {
                    "LicenseType": {
                        "description": "The user license type.",
                        "enum": [
                            "Basic",
                            "Plus",
                            "Pro",
                            "ProTrial"
                        ],
                        "type": "string"
                    },
                    "UserId": {
                        "description": "The user ID.",
                        "pattern": ".*\\S.*",
                        "type": "string"
                    }
                },
                "required": [
                    "UserId"
                ],
                "type": "object"
            },
            "UpdateUserRequestItemList": {
                "items": {
                    "description": "The user ID and user fields to update, used with the <a>BatchUpdateUser</a> action.",
                    "properties": {
                        "LicenseType": {
                            "description": "The user license type.",
                            "enum": [
                                "Basic",
                                "Plus",
                                "Pro",
                                "ProTrial"
                            ],
                            "type": "string"
                        },
                        "UserId": {
                            "description": "The user ID.",
                            "pattern": ".*\\S.*",
                            "type": "string"
                        }
                    },
                    "required": [
                        "UserId"
                    ],
                    "type": "object"
                },
                "maxItems": 20,
                "type": "array"
            },
            "UpdateUserResponse": {
                "properties": {
                    "User": {
                        "description": "The updated user details.",
                        "properties": {
                            "AccountId": {
                                "description": "The Amazon Chime account ID.",
                                "type": "string"
                            },
                            "DisplayName": {
                                "description": "The display name of the user.",
                                "format": "password",
                                "type": "string"
                            },
                            "InvitedOn": {
                                "description": "Date and time when the user is invited to the Amazon Chime account, in ISO 8601 format.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "LicenseType": {
                                "description": "The license type for the user.",
                                "enum": [
                                    "Basic",
                                    "Plus",
                                    "Pro",
                                    "ProTrial"
                                ],
                                "type": "string"
                            },
                            "PersonalPIN": {
                                "description": "The user's personal meeting PIN.",
                                "type": "string"
                            },
                            "PrimaryEmail": {
                                "description": "The primary email address of the user.",
                                "format": "password",
                                "pattern": ".+@.+\\..+",
                                "type": "string"
                            },
                            "RegisteredOn": {
                                "description": "Date and time when the user is registered, in ISO 8601 format.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "UserId": {
                                "description": "The user ID.",
                                "type": "string"
                            },
                            "UserInvitationStatus": {
                                "description": "The user invite status.",
                                "enum": [
                                    "Pending",
                                    "Accepted",
                                    "Failed"
                                ],
                                "type": "string"
                            },
                            "UserRegistrationStatus": {
                                "description": "The user registration status.",
                                "enum": [
                                    "Unregistered",
                                    "Registered",
                                    "Suspended"
                                ],
                                "type": "string"
                            }
                        },
                        "required": [
                            "UserId"
                        ],
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "User": {
                "description": "The user on the Amazon Chime account.",
                "properties": {
                    "AccountId": {
                        "description": "The Amazon Chime account ID.",
                        "type": "string"
                    },
                    "DisplayName": {
                        "description": "The display name of the user.",
                        "format": "password",
                        "type": "string"
                    },
                    "InvitedOn": {
                        "description": "Date and time when the user is invited to the Amazon Chime account, in ISO 8601 format.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "LicenseType": {
                        "description": "The license type for the user.",
                        "enum": [
                            "Basic",
                            "Plus",
                            "Pro",
                            "ProTrial"
                        ],
                        "type": "string"
                    },
                    "PersonalPIN": {
                        "description": "The user's personal meeting PIN.",
                        "type": "string"
                    },
                    "PrimaryEmail": {
                        "description": "The primary email address of the user.",
                        "format": "password",
                        "pattern": ".+@.+\\..+",
                        "type": "string"
                    },
                    "RegisteredOn": {
                        "description": "Date and time when the user is registered, in ISO 8601 format.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "UserId": {
                        "description": "The user ID.",
                        "type": "string"
                    },
                    "UserInvitationStatus": {
                        "description": "The user invite status.",
                        "enum": [
                            "Pending",
                            "Accepted",
                            "Failed"
                        ],
                        "type": "string"
                    },
                    "UserRegistrationStatus": {
                        "description": "The user registration status.",
                        "enum": [
                            "Unregistered",
                            "Registered",
                            "Suspended"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "UserId"
                ],
                "type": "object"
            },
            "UserEmailList": {
                "items": {
                    "format": "password",
                    "pattern": ".+@.+\\..+",
                    "type": "string"
                },
                "maxItems": 50,
                "type": "array"
            },
            "UserError": {
                "description": "The list of errors returned when errors are encountered during the <a>BatchSuspendUser</a>, <a>BatchUnsuspendUser</a>, or <a>BatchUpdateUser</a> actions. This includes user IDs, error codes, and error messages.",
                "properties": {
                    "ErrorCode": {
                        "description": "The error code.",
                        "enum": [
                            "Unauthorized",
                            "Forbidden",
                            "NotFound",
                            "BadRequest",
                            "Conflict",
                            "ServiceFailure",
                            "ServiceUnavailable",
                            "Unprocessable",
                            "Throttled",
                            "PreconditionFailed"
                        ],
                        "type": "string"
                    },
                    "ErrorMessage": {
                        "description": "The error message.",
                        "type": "string"
                    },
                    "UserId": {
                        "description": "The user ID for which the action failed.",
                        "pattern": ".*\\S.*",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UserErrorList": {
                "items": {
                    "description": "The list of errors returned when errors are encountered during the <a>BatchSuspendUser</a>, <a>BatchUnsuspendUser</a>, or <a>BatchUpdateUser</a> actions. This includes user IDs, error codes, and error messages.",
                    "properties": {
                        "ErrorCode": {
                            "description": "The error code.",
                            "enum": [
                                "Unauthorized",
                                "Forbidden",
                                "NotFound",
                                "BadRequest",
                                "Conflict",
                                "ServiceFailure",
                                "ServiceUnavailable",
                                "Unprocessable",
                                "Throttled",
                                "PreconditionFailed"
                            ],
                            "type": "string"
                        },
                        "ErrorMessage": {
                            "description": "The error message.",
                            "type": "string"
                        },
                        "UserId": {
                            "description": "The user ID for which the action failed.",
                            "pattern": ".*\\S.*",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "UserIdList": {
                "items": {
                    "pattern": ".*\\S.*",
                    "type": "string"
                },
                "maxItems": 50,
                "type": "array"
            },
            "UserList": {
                "items": {
                    "description": "The user on the Amazon Chime account.",
                    "properties": {
                        "AccountId": {
                            "description": "The Amazon Chime account ID.",
                            "type": "string"
                        },
                        "DisplayName": {
                            "description": "The display name of the user.",
                            "format": "password",
                            "type": "string"
                        },
                        "InvitedOn": {
                            "description": "Date and time when the user is invited to the Amazon Chime account, in ISO 8601 format.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "LicenseType": {
                            "description": "The license type for the user.",
                            "enum": [
                                "Basic",
                                "Plus",
                                "Pro",
                                "ProTrial"
                            ],
                            "type": "string"
                        },
                        "PersonalPIN": {
                            "description": "The user's personal meeting PIN.",
                            "type": "string"
                        },
                        "PrimaryEmail": {
                            "description": "The primary email address of the user.",
                            "format": "password",
                            "pattern": ".+@.+\\..+",
                            "type": "string"
                        },
                        "RegisteredOn": {
                            "description": "Date and time when the user is registered, in ISO 8601 format.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "UserId": {
                            "description": "The user ID.",
                            "type": "string"
                        },
                        "UserInvitationStatus": {
                            "description": "The user invite status.",
                            "enum": [
                                "Pending",
                                "Accepted",
                                "Failed"
                            ],
                            "type": "string"
                        },
                        "UserRegistrationStatus": {
                            "description": "The user registration status.",
                            "enum": [
                                "Unregistered",
                                "Registered",
                                "Suspended"
                            ],
                            "type": "string"
                        }
                    },
                    "required": [
                        "UserId"
                    ],
                    "type": "object"
                },
                "type": "array"
            }
        },
        "parameters": {
            "Action": {
                "in": "query",
                "name": "Action",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "Version": {
                "in": "query",
                "name": "Version",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Algorithm": {
                "in": "header",
                "name": "X-Amz-Algorithm",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Content-Sha256": {
                "in": "header",
                "name": "X-Amz-Content-Sha256",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Credential": {
                "in": "header",
                "name": "X-Amz-Credential",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Date": {
                "in": "header",
                "name": "X-Amz-Date",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Security-Token": {
                "in": "header",
                "name": "X-Amz-Security-Token",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Signature": {
                "in": "header",
                "name": "X-Amz-Signature",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-SignedHeaders": {
                "in": "header",
                "name": "X-Amz-SignedHeaders",
                "required": false,
                "schema": {
                    "type": "string"
                }
            }
        },
        "requestBodies": {
            "ListAccountsBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {},
                            "type": "object"
                        }
                    }
                },
                "required": true
            }
        },
        "securitySchemes": {
            "hmac": {
                "description": "Amazon Signature authorization v4",
                "in": "header",
                "name": "Authorization",
                "type": "apiKey",
                "x-amazon-apigateway-authtype": "awsSigv4"
            }
        }
    }
}